# teste with versions: 3.0a

# Version-specific commands
# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux[^1-9]*([.0-9]+).*/\1/p")'

# fast reload
# prefix-r to reload file
bind r source-file ~/.tmux.conf

# https://gist.github.com/rodrigolins/775f6e9110c95de794c52bd7e4f1ea4e
set -g base-index 1
set -g pane-base-index 1

# leader: C-b => C-a
unbind C-b
bind-key C-a send-prefix
set -g prefix C-a

# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# split with \ and - instead of " and %
bind-key "\\" split-window -h
bind-key "-" split-window -v
unbind '"'
unbind "%"

# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# don't rename window automatically
set-option -g allow-rename off

# vim keys to switch panes
# https://stackoverflow.com/questions/30719042/tmux-using-hjkl-to-navigate-panes#:~:text=Standard%20TMUX%20is%20set%20to,right%5D%20when%20navigating%20between%20panes.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind C-h resize-pane -L 5
bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-l resize-pane -R 5

# bind < resize-pane -L 10
# bind > resize-pane -L 10
# bind - resize-pane -L 10
# bind = resize-pane -L 10


# powerline
# https://youtu.be/_D6RkmgShvU
# https://www.tecmint.com/owerline-adds-powerful-statuslines-and-prompts-to-vim-and-bash/
set-option -g default-terminal screen-256color
# set -g status-interval 6

# run-shell
source "~/.local/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf"
run-shell "powerline-daemon -q"


# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# mouse mode >= 2.1
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' " \
  set -g mouse on"


# mouse mode < 2.1
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
  set -g mouse-select-window on; \
  set -g mouse-select-pane on; \
  set -g mouse-resize-window on"

# https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/
set-window-option -g mode-keys vi

# # copy mode > 2.3
# if-shell -b '[ "$(echo "$TMUX_VERSION > 2.3" | bc)" = 1 ]' " \
#   bind-key -T copy-mode-vi 'v' send -X begin-selection; \
#   bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel"

# # copy mode <= 2.3
# if-shell -b '[ "$(echo "$TMUX_VERSION <= 2.3" | bc)" = 1 ]' " \
#   bind-key -t vi-copy 'v' begin-selection; \
#   bind-key -t vi-copy 'y' copy-selection"


# https://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.5" | bc)" = 1]' " \
  bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard; \
  bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard"



# doesn't work...:

# use system clipboard
# https://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux

# # < 2.5
# if-shell -b '[ "$(echo $"TMUX_VERSIO < 2.5" || bc)" = 1]' " \
#   bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"
# 
# # <= 2.5
# if-shell -b '[ "$(echo $"TMUX_VERSIO >= 2.5" || bc)" = 1]' " \
#   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind -T copy-mode-vi y send -X copy-pipe "xclip -selection c"

# ????
# bind y run-shell "tmux show-buffer | xclip -i -selection clipboard" \; display-message "Copied tmux buffer to system clipboard"

